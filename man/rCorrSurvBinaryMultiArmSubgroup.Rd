% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rCorrSurvBinaryMultiArmSubgroup.R
\name{rCorrSurvBinaryMultiArmSubgroup}
\alias{rCorrSurvBinaryMultiArmSubgroup}
\title{Generate Correlated Time-to-Event and Binary Outcomes for Multiple Arms and Subgroups}
\usage{
rCorrSurvBinaryMultiArmSubgroup(
  nsim,
  outcomes,
  arm.params,
  tau = 12,
  seed = NULL,
  validate.bounds = TRUE,
  prioritize = "OS"
)
}
\arguments{
\item{nsim}{A numeric value representing number of iterations}

\item{outcomes}{A character vector including 'OS', 'PFS' and/or 'OR' (same for all arms/subgroups)}

\item{arm.params}{A named list where each element represents a treatment arm.
Each arm contains either:
- Direct parameters (for single population): mst.OS, mst.PFS, p.OR, rho.OS.PFS, rho.OS.OR, rho.PFS.OR, n
- Named list of subgroups (for multiple subgroups): sub1 = list(...), sub2 = list(...), etc.
Each subgroup list should contain: mst.OS, mst.PFS, p.OR, rho.OS.PFS, rho.OS.OR, rho.PFS.OR, n}

\item{tau}{A numeric value representing patients' accrual period in years
(patients will be enrolled within [0, tau], default: 12)}

\item{seed}{A numeric value representing seed number for reproducing results}

\item{validate.bounds}{Logical, whether to validate correlation bounds against
FrÃ©chet-Hoeffding bounds before simulation (default: TRUE)}

\item{prioritize}{Character string specifying which distribution to preserve
when applying OS >= PFS constraint. Options are "OS" (default) or "PFS".}
}
\value{
A tibble containing simulation results with columns:
  \item{sim}{Simulation iteration number (1 to nsim)}
  \item{ARM}{Treatment arm identifier (arm1, arm2, ...)}
  \item{SUBGROUP}{Subgroup identifier (sub1, sub2, ... or NA if no subgroups)}
  \item{patientID}{Patient identifier within each arm/subgroup/iteration}
  \item{OS}{Overall survival time in years (if 'OS' in outcomes)}
  \item{PFS}{Progression-free survival time in years (if 'PFS' in outcomes)}
  \item{OR}{Objective response indicator 0/1 (if 'OR' in outcomes)}
  \item{Accrual}{Patient accrual time in years}
}
\description{
This function extends rCorrSurvBinary to handle multiple treatment arms and
subgroups, generating correlated time-to-event and binary outcomes including
overall survival (OS), progression-free survival (PFS), and objective response (OR).
}
\details{
The function supports two main scenarios:
\itemize{
  \item Single population per arm: Each arm has one set of parameters
  \item Multiple subgroups per arm: Each arm contains multiple subgroups with different parameters
}

Parameter structure examples:
\itemize{
  \item Single population: arm.params = list(arm1 = list(mst.OS = 12, mst.PFS = 6, p.OR = 0.4, n = 100, ...))
  \item Multiple subgroups: arm.params = list(arm1 = list(sub1 = list(mst.OS = 12, n = 50, ...), sub2 = list(mst.OS = 15, n = 50, ...)))
}
}
\examples{
# Example 1: Two arms without subgroups
arm.params.simple <- list(
  arm1 = list(
    mst.OS = 18, mst.PFS = 12, p.OR = 0.6, n = 200,
    rho.OS.PFS = 0.5, rho.OS.OR = 0.3, rho.PFS.OR = 0.4
  ),
  arm2 = list(
    mst.OS = 12, mst.PFS = 8, p.OR = 0.4, n = 200,
    rho.OS.PFS = 0.5, rho.OS.OR = 0.3, rho.PFS.OR = 0.4
  )
)

result1 <- rCorrSurvBinaryMultiArmSubgroup(
  nsim = 100,
  outcomes = c('OS', 'PFS', 'OR'),
  arm.params = arm.params.simple,
  tau = 24,
  seed = 123
)

# Example 2: Two arms with two subgroups each
arm.params.subgroups <- list(
  arm1 = list(
    sub1 = list(
      mst.OS = 18, mst.PFS = 10, p.OR = 0.5, n = 150,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    ),
    sub2 = list(
      mst.OS = 14, mst.PFS = 7, p.OR = 0.4, n = 50,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    )
  ),
  arm2 = list(
    sub1 = list(
      mst.OS = 12, mst.PFS = 5, p.OR = 0.3, n = 150,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    ),
    sub2 = list(
      mst.OS = 10, mst.PFS = 5, p.OR = 0.2, n = 50,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    )
  )
)

result2 <- rCorrSurvBinaryMultiArmSubgroup(
  nsim = 100,
  outcomes = c('OS', 'PFS', 'OR'),
  arm.params = arm.params.subgroups,
  tau = 18,
  seed = 456
)

}
