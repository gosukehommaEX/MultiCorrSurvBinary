% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnalysisCorrSurvBinary.R
\name{AnalysisCorrSurvBinary}
\alias{AnalysisCorrSurvBinary}
\title{Advanced Event-Driven Analysis for Multiple Arms and Subgroups}
\usage{
AnalysisCorrSurvBinary(
  data,
  E,
  prioritize,
  subgroup.prioritize,
  alternative = "greater"
)
}
\arguments{
\item{data}{A tibble from rCorrSurvBinaryMultiArmSubgroup containing simulation results}

\item{E}{A numeric vector of event numbers for sequential analyses (e.g., c(100, 200, 300))}

\item{prioritize}{Character string specifying which outcome drives the analysis timing.
Must be either "OS" or "PFS" and should match the prioritize parameter used
in data generation.}

\item{subgroup.prioritize}{Character vector specifying subgroup analysis priority.
Can include 'entire' for overall population and specific subgroup names.
Example: c('entire', 'sub1', 'sub2'). Analysis timing is determined by the
first subgroup in this vector.}

\item{alternative}{Direction of alternative hypothesis. Options are:
"greater" (default): treatment > control (improvement in treatment)
"less": treatment < control
"two.sided": treatment ≠ control}
}
\value{
A tibble containing analysis results with columns:
  \item{sim}{Simulation iteration number}
  \item{analysis_event}{Event number triggering the analysis (from E vector)}
  \item{timing_subgroup}{Subgroup used for analysis timing (first in subgroup.prioritize)}
  \item{analysis_subgroup}{Subgroup being analyzed}
  \item{outcome}{Outcome being analyzed (OS, PFS, or OR)}
  \item{comparison}{Comparison being made (e.g., "arm1_vs_arm3")}
  \item{treatment_arm}{Treatment arm in comparison}
  \item{control_arm}{Control arm in comparison}
  \item{analysis_time}{Analysis time when E-th event occurred}
  \item{n_treatment}{Sample size in treatment arm at analysis time}
  \item{n_control}{Sample size in control arm at analysis time}
  \item{events_treatment, events_control}{Events/responses in each arm}
  \item{pvalue}{P-value from statistical test}
}
\description{
This function performs comprehensive event-driven analysis on simulated data from
rCorrSurvBinaryMultiArmSubgroup, with subgroup prioritization and multiple arm comparisons.
}
\details{
The algorithm performs the following:

1. **Timing Determination**: Uses first subgroup in subgroup.prioritize to determine analysis timing
2. **Multiple Comparisons**: All treatment arms vs. control arm (highest number)
3. **Subgroup Analysis**: Analyzes each subgroup specified in subgroup.prioritize
4. **Entire Population**: When "entire" is specified, combines all subgroups
5. **Statistical Tests**:
   - OS/PFS: One-sided log-rank test
   - OR: One-sided chi-squared test with pooled proportion

Total number of tests per simulation =
length(subgroup.prioritize) × available_outcomes × (n_arms - 1)
}
\examples{
\dontrun{
# Load required packages
library(dplyr)
library(tibble)
library(survival)
library(copula)

# Generate sample data
arm.params.subgroups <- list(
  arm1 = list(
    sub1 = list(
      mst.OS = 18, mst.PFS = 10, p.OR = 0.5, n = 150,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    ),
    sub2 = list(
      mst.OS = 14, mst.PFS = 7, p.OR = 0.4, n = 50,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    )
  ),
  arm2 = list(
    sub1 = list(
      mst.OS = 12, mst.PFS = 5, p.OR = 0.3, n = 150,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    ),
    sub2 = list(
      mst.OS = 10, mst.PFS = 5, p.OR = 0.2, n = 50,
      rho.OS.PFS = 0.4, rho.OS.OR = 0.2, rho.PFS.OR = 0.3
    )
  )
)

result_data <- rCorrSurvBinaryMultiArmSubgroup(
  nsim = 1000,
  outcomes = c('OS', 'PFS', 'OR'),
  arm.params = arm.params.subgroups,
  tau = 18,
  seed = 456,
  prioritize = 'PFS'
)

# Perform event-driven analysis
analysis_results <- AnalysisCorrSurvBinary(
  data = result_data,
  E = c(100, 200, 300),
  prioritize = "PFS",
  subgroup.prioritize = c("entire", "sub1"),
  alternative = "greater"
)

# Summary by subgroup and outcome
analysis_results \%>\%
  group_by(analysis_event, analysis_subgroup, outcome) \%>\%
  summarise(
    n_comparisons = n(),
    significant_tests = sum(pvalue < 0.05, na.rm = TRUE),
    mean_analysis_time_years = mean(analysis_time, na.rm = TRUE),
    mean_analysis_time_months = mean(analysis_time * 12, na.rm = TRUE),
    mean_sample_size = mean(n_treatment + n_control, na.rm = TRUE),
    .groups = 'drop'
  )
}

}
